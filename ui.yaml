apiVersion: apps/v1
kind: Deployment
metadata:
  name: testui
  namespace: eternal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testui
  template:
    metadata:
      labels:
        app: testui
    spec:
      containers:
        - name: testui
          image: 024705512663.dkr.ecr.us-east-1.amazonaws.com/testui:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 3000 # Port that your React app is running on
          env:
            - name: REACT_APP_DNS_URL
              value: http://20.219.107.197/goengine
            - name: REACT_APP_NODE_ENV
              value: production
            - name: REACT_APP_PLATFORM_DNS_URL
              value: http://$ELB_DNS/goengine
            - name: REACT_APP_KEYCLOAK_URL
              value: http://keycloak.default.svc.cluster.local:8080/auth
            - name: REACT_APP_KEYCLOAK_REALM_NAME
              value: keycloak-platform
            - name: REACT_APP_KEYCLOAK_CLIENT_ID
              value: react-auth
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: testui
  namespace: eternal
spec:
  selector:
    app: testui
  ports:
    - name: http
      port: 80 # Port that the service should listen on
      targetPort: 3000 # Port that the pods are listening on
  type: ClusterIP # Use LoadBalancer type if running on cloud providers like AWS, GCP etc

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testui
  namespace: eternal
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  # namespace: default
spec:
  ingressClassName: nginx
  rules:
    #- host: $ELB_DNS
  - http:
      paths:
        - pathType: Prefix
          path: /platformui(/|$)(.*)
          backend:
            service:
              name: testui
              port:
                number: 3000
        - pathType: Prefix
          path: /(.*)
          backend:
            service:
              name: testui
              port:
                number: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testui-static
  namespace: eternal
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /static/$2
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /static(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: testui
            port: 
              number: 3000
